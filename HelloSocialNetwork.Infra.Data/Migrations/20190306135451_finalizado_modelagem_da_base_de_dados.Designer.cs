// <auto-generated />
using System;
using HelloSocialNetwork.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HelloSocialNetwork.Infra.Data.Migrations
{
    [DbContext(typeof(HelloSocialNetworkContext))]
    [Migration("20190306135451_finalizado_modelagem_da_base_de_dados")]
    partial class finalizado_modelagem_da_base_de_dados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Amigo", b =>
                {
                    b.Property<int>("UsuarioId");

                    b.Property<int>("UsuarioAmigoId");

                    b.HasKey("UsuarioId", "UsuarioAmigoId");

                    b.HasIndex("UsuarioAmigoId");

                    b.ToTable("Amigos");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataPublicacao");

                    b.Property<int>("PostagemId");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("PostagemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Identificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NumeroDocumento");

                    b.Property<int>("TipoDocumento");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Identificacao");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.InstituicaoEnsino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DataFormacao");

                    b.Property<string>("NomeInstituicao");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("InstituicaoEnsinos");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.LocalTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAdmissao");

                    b.Property<DateTime?>("DataSaida");

                    b.Property<bool>("EmpresaAtual");

                    b.Property<string>("Nome");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LocalTrabalhos");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Postagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataPublicacao");

                    b.Property<int>("GrupoId");

                    b.Property<string>("Texto");

                    b.Property<string>("UrlConteudo");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Postagens");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.ProcurandoPor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("ProcurandoPor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "NaoEspecificado"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Namoro"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Amizade"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "VerNoQueDa"
                        });
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.StatusRelacionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("StatusRelacionamento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "NaoEspecificado"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Solteiro"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Casado"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "EmRelacionamentoSerio"
                        });
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int?>("ProcurandoPorId");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Sexo");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int?>("StatusRelacionamentoId");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("ProcurandoPorId");

                    b.HasIndex("StatusRelacionamentoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.UsuarioGrupo", b =>
                {
                    b.Property<int>("UsuarioId");

                    b.Property<int>("GrupoId");

                    b.Property<bool>("Administrador");

                    b.Property<DateTime>("DataCriacao");

                    b.HasKey("UsuarioId", "GrupoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("UsuarioGrupos");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Amigo", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "UsuarioAmigo")
                        .WithMany()
                        .HasForeignKey("UsuarioAmigoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Amigos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Postagem", "Postagem")
                        .WithMany("Comentarios")
                        .HasForeignKey("PostagemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Identificacao", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Identificacao")
                        .HasForeignKey("HelloSocialNetwork.Domain.Entities.Identificacao", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.InstituicaoEnsino", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithMany("InstituicaoDeEnsino")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.LocalTrabalho", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithMany("LocalTrabalho")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Postagem", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Grupo", "Grupo")
                        .WithMany("Postagens")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Postagens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.ProcurandoPor", "ProcurandoPor")
                        .WithMany()
                        .HasForeignKey("ProcurandoPorId");

                    b.HasOne("HelloSocialNetwork.Domain.Entities.StatusRelacionamento", "StatusRelacionamento")
                        .WithMany()
                        .HasForeignKey("StatusRelacionamentoId");
                });

            modelBuilder.Entity("HelloSocialNetwork.Domain.Entities.UsuarioGrupo", b =>
                {
                    b.HasOne("HelloSocialNetwork.Domain.Entities.Grupo", "Grupo")
                        .WithMany("UsuarioGrupos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HelloSocialNetwork.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioGrupos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
